#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nha_tro
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="nhatro")]
	public partial class DanhSachKhachTroDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKHACHTRO(KHACHTRO instance);
    partial void UpdateKHACHTRO(KHACHTRO instance);
    partial void DeleteKHACHTRO(KHACHTRO instance);
    #endregion
		
		public DanhSachKhachTroDataContext() : 
				base(global::nha_tro.Properties.Settings.Default.nhatroConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DanhSachKhachTroDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DanhSachKhachTroDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DanhSachKhachTroDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DanhSachKhachTroDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<KHACHTRO> KHACHTROs
		{
			get
			{
				return this.GetTable<KHACHTRO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHTRO")]
	public partial class KHACHTRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKT;
		
		private string _MaPT;
		
		private string _HoTen;
		
		private string _CMND;
		
		private string _GioiTinh;
		
		private string _NgeNghiep;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<bool> _TrangthaiTro;
		
		private string _tendangnhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKTChanging(string value);
    partial void OnMaKTChanged();
    partial void OnMaPTChanging(string value);
    partial void OnMaPTChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgeNghiepChanging(string value);
    partial void OnNgeNghiepChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTrangthaiTroChanging(System.Nullable<bool> value);
    partial void OnTrangthaiTroChanged();
    partial void OntendangnhapChanging(string value);
    partial void OntendangnhapChanged();
    #endregion
		
		public KHACHTRO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKT
		{
			get
			{
				return this._MaKT;
			}
			set
			{
				if ((this._MaKT != value))
				{
					this.OnMaKTChanging(value);
					this.SendPropertyChanging();
					this._MaKT = value;
					this.SendPropertyChanged("MaKT");
					this.OnMaKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPT", DbType="NVarChar(50)")]
		public string MaPT
		{
			get
			{
				return this._MaPT;
			}
			set
			{
				if ((this._MaPT != value))
				{
					this.OnMaPTChanging(value);
					this.SendPropertyChanging();
					this._MaPT = value;
					this.SendPropertyChanged("MaPT");
					this.OnMaPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(50)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgeNghiep", DbType="NVarChar(50)")]
		public string NgeNghiep
		{
			get
			{
				return this._NgeNghiep;
			}
			set
			{
				if ((this._NgeNghiep != value))
				{
					this.OnNgeNghiepChanging(value);
					this.SendPropertyChanging();
					this._NgeNghiep = value;
					this.SendPropertyChanged("NgeNghiep");
					this.OnNgeNghiepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangthaiTro", DbType="Bit")]
		public System.Nullable<bool> TrangthaiTro
		{
			get
			{
				return this._TrangthaiTro;
			}
			set
			{
				if ((this._TrangthaiTro != value))
				{
					this.OnTrangthaiTroChanging(value);
					this.SendPropertyChanging();
					this._TrangthaiTro = value;
					this.SendPropertyChanged("TrangthaiTro");
					this.OnTrangthaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tendangnhap", DbType="NVarChar(50)")]
		public string tendangnhap
		{
			get
			{
				return this._tendangnhap;
			}
			set
			{
				if ((this._tendangnhap != value))
				{
					this.OntendangnhapChanging(value);
					this.SendPropertyChanging();
					this._tendangnhap = value;
					this.SendPropertyChanged("tendangnhap");
					this.OntendangnhapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
