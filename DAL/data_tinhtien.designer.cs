#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="nhatro")]
	public partial class data_tinhtienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQLTHUTIEN(QLTHUTIEN instance);
    partial void UpdateQLTHUTIEN(QLTHUTIEN instance);
    partial void DeleteQLTHUTIEN(QLTHUTIEN instance);
    #endregion
		
		public data_tinhtienDataContext() : 
				base(global::DAL.Properties.Settings.Default.nhatroConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public data_tinhtienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_tinhtienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_tinhtienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_tinhtienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QLTHUTIEN> QLTHUTIENs
		{
			get
			{
				return this.GetTable<QLTHUTIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QLTHUTIEN")]
	public partial class QLTHUTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThu;
		
		private System.Nullable<int> _MaDV;
		
		private string _MaPT;
		
		private string _MaKT;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<System.DateTime> _NgayThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuChanging(int value);
    partial void OnMaThuChanged();
    partial void OnMaDVChanging(System.Nullable<int> value);
    partial void OnMaDVChanged();
    partial void OnMaPTChanging(string value);
    partial void OnMaPTChanged();
    partial void OnMaKTChanging(string value);
    partial void OnMaKTChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnNgayThuChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThuChanged();
    #endregion
		
		public QLTHUTIEN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThu
		{
			get
			{
				return this._MaThu;
			}
			set
			{
				if ((this._MaThu != value))
				{
					this.OnMaThuChanging(value);
					this.SendPropertyChanging();
					this._MaThu = value;
					this.SendPropertyChanged("MaThu");
					this.OnMaThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int")]
		public System.Nullable<int> MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPT", DbType="NVarChar(50)")]
		public string MaPT
		{
			get
			{
				return this._MaPT;
			}
			set
			{
				if ((this._MaPT != value))
				{
					this.OnMaPTChanging(value);
					this.SendPropertyChanging();
					this._MaPT = value;
					this.SendPropertyChanged("MaPT");
					this.OnMaPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKT", DbType="NVarChar(50)")]
		public string MaKT
		{
			get
			{
				return this._MaKT;
			}
			set
			{
				if ((this._MaKT != value))
				{
					this.OnMaKTChanging(value);
					this.SendPropertyChanging();
					this._MaKT = value;
					this.SendPropertyChanged("MaKT");
					this.OnMaKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThu", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThu
		{
			get
			{
				return this._NgayThu;
			}
			set
			{
				if ((this._NgayThu != value))
				{
					this.OnNgayThuChanging(value);
					this.SendPropertyChanging();
					this._NgayThu = value;
					this.SendPropertyChanged("NgayThu");
					this.OnNgayThuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
